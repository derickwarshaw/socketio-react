# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:latest

services:
  - docker:dind

variables:
  STAGE_SSH_USER: sibdev
  SSH_OPT: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

stages:
  - test
  - build
  - deploy

before_script:
  - apk add --update --no-cache openssh sshpass
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

test:
  stage: test
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f Dockerfile .
    - docker run "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" npm run test:ci -- --coverage
  only:
    - merge_request

lint:
  stage: test
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f Dockerfile .
    - docker run "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" npm run lint
  only:
    - merge_request

build:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" -f nginx/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master


# deploy-stage:
#   stage: deploy
#   script:
#     - sshpass -V
#     - export SSHPASS=$STAGE_SSH_PASS
#     - sshpass -e ssh $SSH_OPT root@$STAGE_SSH_HOST "docker --version"
#     - sshpass -e ssh $SSH_OPT root@$STAGE_SSH_HOST "docker-compose --version"
#     - sshpass -e ssh $SSH_OPT root@$STAGE_SSH_HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
#     - sshpass -e ssh $SSH_OPT root@$STAGE_SSH_HOST "mkdir -p /data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
#     - sshpass -e scp $SSH_OPT ./docker-compose.prod.yml root@$STAGE_SSH_HOST:/data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/docker-compose.yml
#     - sshpass -e ssh $SSH_OPT root@$STAGE_SSH_HOST "cd /data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ && docker-compose pull"
#     - sshpass -e ssh $SSH_OPT root@$STAGE_SSH_HOST "cd /data/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/ && docker-compose up -d"
#   only:
#     - master
